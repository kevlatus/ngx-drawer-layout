var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/DrawerItemComponent.html",[0,0.476,1,0.591]],["body/components/DrawerItemComponent.html",[0,0.746,1,0.778,2,0.831,3,0.364,4,0.364,5,0.773,6,0.773,7,0.773,8,0.773,9,0.293,10,0.676,11,1.486,12,2.155,13,1.15,14,0.689,15,1.966,16,3.152,17,3.152,18,1.125,19,2.728,20,2.288,21,1.026,22,2.521,23,2.288,24,3.104,25,1.648,26,3.152,27,1.446,28,2.288,29,2.453,30,3.152,31,2.453,32,0.928,33,3.321,34,2.288,35,2.288,36,1.78,37,2.288,38,0.644,39,1.639,40,1.571,41,1.196,42,2.799,43,1.196,44,2.288,45,0.364,46,1.446,47,1.78,48,0.778,49,0.071,50,2.155,51,0.949,52,1.477,53,2.453,54,1.446,55,2.288,56,2.288,57,1.78,58,1.992,59,1.477,60,1.477,61,2.288,62,1.477,63,1.477,64,2.288,65,0.644,66,1.145,67,2.178,68,1.196,69,1.78,70,2.799,71,0.934,72,1.15,73,0.364,74,1.477,75,1.992,76,0.293,77,0.537,78,1.477,79,1.477,80,1.477,81,0.293,82,1.15,83,1.477,84,2.288,85,1.373,86,1.477,87,0.934,88,2.288,89,1.15,90,1.477,91,0.934,92,0.934,93,1.78,94,1.477,95,0.934,96,1.477,97,1.477,98,1.15,99,2.288,100,1.477,101,1.477,102,1.15,103,1.477,104,1.477,105,1.477,106,1.477,107,1.477,108,2.288,109,1.477,110,1.477,111,1.477,112,1.477,113,0.934,114,1.15,115,1.15,116,1.78,117,1.15,118,1.477,119,1.446,120,1.477,121,1.477,122,1.15,123,1.477,124,0.537,125,1.196,126,0.997,127,0.364,128,1.648,129,0.773,130,1.477,131,0.773,132,0.229,133,0.773,134,0.293,135,0.537,136,0.773,137,0.364,138,0.445,139,0.773,140,0.644,141,0.293,142,0.644,143,0.773,144,0.022,145,0.034,146,0.022]],["title/components/DrawerLayoutComponent.html",[0,0.476,132,0.371]],["body/components/DrawerLayoutComponent.html",[0,0.822,1,0.489,2,1.035,3,0.489,4,0.489,5,1.037,6,1.037,7,1.745,8,1.745,9,0.393,10,0.662,11,1.454,14,0.597,15,1.49,18,1.15,21,0.597,25,1.49,27,1.801,32,0.489,38,0.864,39,1.806,40,1.753,41,1.49,43,1.49,45,0.489,48,0.703,49,0.071,51,0.858,65,0.864,66,1.325,68,1.49,73,0.823,76,0.393,77,0.72,81,0.393,91,1.253,92,1.253,93,2.218,95,1.253,113,1.801,122,2.218,124,0.72,125,1.49,126,1.242,127,0.489,128,1.907,129,1.037,131,1.037,132,0.565,133,1.037,134,0.393,135,0.72,136,1.037,137,0.489,138,0.597,139,1.037,140,0.864,141,0.393,142,0.864,143,1.037,144,0.029,145,0.042,146,0.029,147,2.109,148,1.543,149,2.218,150,2.85,151,2.85,152,1.801,153,3.131,154,2.85,155,2.85,156,2.85,157,2.85,158,2.85,159,2.85,160,2.85,161,2.85,162,2.85,163,1.49,164,2.85,165,1.211,166,3.337,167,2.85,168,1.49,169,2.596,170,1.253,171,1.801,172,2.85,173,2.109,174,1.037,175,1.037,176,1.983,177,1.983,178,1.983,179,1.983,180,2.85,181,1.983,182,1.983,183,1.983]],["title/modules/DrawerLayoutModule.html",[184,1.515,185,1.045]],["body/modules/DrawerLayoutModule.html",[1,1.12,3,0.522,4,0.522,9,0.42,10,0.592,12,1.337,32,0.522,49,0.071,51,0.637,71,1.337,73,1.097,76,0.42,81,0.42,87,1.337,124,0.769,132,0.703,134,0.9,135,1.084,137,1.12,138,0.899,141,0.9,144,0.031,145,0.044,146,0.031,147,1.337,165,0.899,175,1.107,184,1.337,185,2.063,186,1.337,187,1.107,188,2.691,189,1.337,190,2.323,191,2.691,192,1.647,193,1.647,194,1.647,195,2.323,196,1.647,197,1.337,198,2.985,199,2.116,200,1.647,201,2.985,202,3.459,203,2.116,204,3.459,205,2.691,206,2.985,207,1.647,208,2.985,209,2.985,210,2.985,211,1.647,212,2.985,213,1.647,214,3.757,215,2.116,216,2.116,217,1.337,218,2.116,219,1.337,220,2.116,221,2.116,222,2.116,223,1.647]],["title/interfaces/DrawerNavItem.html",[224,1.254,225,1.254]],["body/interfaces/DrawerNavItem.html",[3,0.611,4,0.611,9,0.491,10,0.491,14,0.746,18,1.087,19,2.727,21,1.299,22,2.727,24,3.357,25,1.74,27,2.103,33,1.927,45,0.611,48,0.991,49,0.071,50,2.374,53,1.927,54,2.103,57,2.589,58,2.868,77,1.364,81,0.491,92,2.103,134,0.491,144,0.036,145,0.049,146,0.036,168,1.964,224,1.74,225,1.74,226,2.477,227,1.927,228,1.927,229,2.477,230,2.477,231,1.927,232,1.927,233,4.016,234,4.314,235,3.327,236,4.016,237,3.327,238,3.327,239,3.327,240,2.589,241,3.327,242,3.327,243,3.327,244,2.477]],["title/components/DrawerNavListComponent.html",[0,0.476,134,0.476]],["body/components/DrawerNavListComponent.html",[0,0.788,1,0.526,2,1.089,3,0.526,4,0.526,5,1.114,6,1.114,7,1.114,8,1.114,9,0.423,10,0.689,11,1.513,14,0.641,18,1.138,19,1.347,21,0.903,32,0.526,38,0.928,39,1.844,40,1.844,41,1.568,43,1.568,45,0.526,46,1.896,48,0.74,49,0.07,51,0.903,58,1.896,66,1.261,73,0.74,75,2.194,76,0.423,77,1.089,81,0.423,85,1.307,98,2.334,102,1.658,114,1.658,115,1.658,116,2.334,117,2.334,124,0.774,125,1.568,126,1.307,127,0.526,128,1.97,129,1.114,131,1.114,132,0.33,133,1.114,134,0.747,135,1.685,136,1.114,137,0.526,138,0.641,139,1.114,140,0.928,141,0.423,142,0.928,143,1.114,144,0.031,145,0.044,146,0.031,217,2.194,225,1.815,231,2.334,232,3.294,245,1.658,246,2.999,247,3.768,248,4.393,249,3.471,250,2.999,251,2.13,252,1.658,253,1.658,254,2.13,255,2.13,256,2.13]],["title/injectables/DrawerService.html",[165,0.722,257,1.254]],["body/injectables/DrawerService.html",[3,0.447,4,0.447,9,0.359,10,0.821,14,0.803,18,1.123,21,0.545,25,1.396,31,2.077,32,0.447,45,0.447,47,2.077,48,0.447,49,0.072,50,2.003,51,1.214,65,0.789,66,0.658,69,2.077,71,2.752,72,3.342,73,0.658,76,0.359,77,0.658,81,0.359,82,2.077,85,1.996,87,1.687,89,1.41,132,0.413,138,1.052,144,0.027,145,0.039,146,0.027,163,2.039,165,0.803,169,2.466,173,2.669,174,0.947,200,2.077,257,1.396,258,1.812,259,1.41,260,2.669,261,2.669,262,2.669,263,3.496,264,3.496,265,2.669,266,4.031,267,3.169,268,1.812,269,3.496,270,1.812,271,2.669,272,2.669,273,1.812,274,2.669,275,1.812,276,2.464,277,2.669,278,1.812,279,2.669,280,1.812,281,2.669,282,1.812,283,1.812,284,2.21,285,1.812,286,1.812,287,2.077,288,2.077,289,1.812,290,1.812,291,1.812,292,1.812,293,2.077,294,2.669,295,1.812,296,1.812,297,1.812,298,1.812,299,1.812,300,1.812,301,1.812,302,1.812,303,1.812,304,1.812]],["title/components/DrawerToggleButtonComponent.html",[0,0.476,137,0.591]],["body/components/DrawerToggleButtonComponent.html",[0,0.796,1,0.44,2,0.958,3,0.44,4,0.44,5,0.933,6,0.933,7,0.933,8,0.933,9,0.354,10,0.688,11,1.512,14,0.537,15,1.815,18,1.134,21,0.537,22,2.743,32,0.44,38,0.778,39,1.748,40,1.689,41,1.38,43,1.38,45,0.44,46,1.668,48,0.651,49,0.071,51,0.945,65,0.778,66,1.26,67,1.389,73,0.856,75,1.668,76,0.354,77,0.648,81,0.354,85,0.778,124,0.648,125,1.38,126,1.15,127,0.44,128,1.815,129,0.933,131,0.933,132,0.276,133,0.933,134,0.354,135,0.648,136,0.933,137,0.856,138,1.368,139,1.937,140,0.778,141,0.354,142,0.778,143,0.933,144,0.026,145,0.039,146,0.026,149,2.054,152,1.668,163,1.38,165,1.045,168,1.38,170,1.128,171,1.668,173,2.341,174,0.933,175,0.933,219,2.193,252,2.444,253,1.389,276,1.668,284,1.668,287,2.054,288,2.054,305,1.389,306,2.639,307,2.054,308,2.639,309,2.639,310,2.639,311,2.639,312,2.639,313,2.639,314,2.639,315,4.119,316,2.639,317,3.141,318,2.639,319,3.141,320,2.639,321,1.784,322,2.639,323,2.639,324,2.639,325,2.639,326,2.639,327,2.639,328,2.639,329,2.639,330,2.639,331,1.784,332,1.784,333,1.784,334,1.784,335,1.784]],["title/directives/DrawerToggleDirective.html",[127,0.591,141,0.476]],["body/directives/DrawerToggleDirective.html",[3,0.659,4,0.659,9,0.53,10,0.821,14,0.805,18,1.087,21,0.805,32,0.659,38,1.165,39,1.525,45,0.659,48,0.863,49,0.07,51,1.174,65,1.165,66,0.971,73,0.863,76,0.53,81,0.53,85,1.525,91,2.212,126,1.525,127,1.021,140,1.165,141,0.694,142,1.525,144,0.039,145,0.052,146,0.039,163,1.83,165,1.293,168,1.83,170,1.689,171,1.689,175,1.398,276,2.212,284,2.212,307,3.495,336,3.221,337,2.08,338,3.499,339,3.499,340,2.723,341,3.499,342,3.499,343,2.673,344,2.673,345,2.673,346,2.673,347,2.673,348,2.673,349,2.673,350,2.673]],["title/coverage.html",[351,2.533]],["body/coverage.html",[0,0.852,1,0.727,9,0.585,10,0.911,11,1.871,12,1.863,13,2.294,48,0.727,49,0.069,127,0.727,132,0.457,134,0.585,135,1.354,137,0.727,138,1.122,141,0.585,144,0.043,145,0.055,146,0.043,147,1.863,148,2.294,165,0.888,217,1.863,219,1.863,224,1.542,225,1.542,227,2.294,228,2.294,245,2.294,257,1.542,259,2.294,293,2.294,305,2.294,336,2.294,337,2.294,351,2.294,352,2.294,353,2.948,354,2.948,355,4.087,356,2.948,357,3.727,358,3.727,359,2.948,360,2.948,361,2.948,362,2.948,363,2.948,364,2.948,365,2.948,366,2.948]],["title/dependencies.html",[187,1.505,367,2.011]],["body/dependencies.html",[49,0.072,76,0.628,144,0.047,145,0.057,146,0.047,174,1.655,187,1.655,207,2.463,211,2.463,213,2.463,368,3.166,369,4.712,370,3.166,371,3.896,372,3.166,373,3.166,374,3.032,375,2.463,376,3.166,377,2.463,378,3.166,379,3.166,380,3.166,381,3.166,382,3.166,383,3.166,384,3.166,385,3.166,386,3.166]],["title/index.html",[45,0.496,387,1.565,388,1.565]],["body/index.html",[2,0.853,15,2.273,18,1.12,29,2.844,32,0.579,36,2.844,40,1.894,49,0.063,68,1.678,73,1.047,76,0.466,81,0.466,95,2.028,113,2.6,119,1.484,132,0.364,144,0.035,145,0.047,146,0.035,152,1.484,153,3.304,185,1.398,189,1.484,205,2.497,223,1.827,240,3.304,374,1.827,375,1.484,377,1.827,389,3.208,390,3.929,391,2.348,392,1.827,393,2.348,394,3.208,395,2.348,396,2.348,397,2.348,398,2.348,399,3.929,400,2.348,401,2.348,402,2.348,403,2.348,404,2.348,405,2.348,406,2.348,407,2.348,408,2.348,409,2.348,410,3.208,411,3.655,412,2.348,413,2.348,414,3.208,415,2.348,416,2.348,417,2.348,418,2.348,419,3.208,420,2.348,421,3.208,422,2.348,423,2.348,424,3.655,425,2.348,426,3.655,427,2.348,428,3.208,429,2.348,430,2.348,431,2.348,432,2.348,433,3.208,434,2.348,435,2.348,436,2.348,437,2.348,438,2.348,439,3.208,440,2.348,441,2.348,442,2.348,443,2.348,444,2.348]],["title/license.html",[387,1.565,388,1.565,445,1.565]],["body/license.html",[49,0.053,54,1.749,68,1.871,144,0.041,145,0.053,146,0.041,197,1.749,340,2.153,352,2.153,445,2.153,446,2.767,447,3.967,448,2.767,449,2.767,450,2.767,451,2.767,452,3.579,453,2.767,454,2.767,455,2.767,456,2.767,457,2.767,458,2.767,459,3.579,460,4.638,461,2.767,462,2.767,463,2.767,464,3.967,465,2.767,466,3.579,467,2.767,468,2.767,469,2.767,470,2.767,471,2.767,472,2.767,473,2.767,474,2.767,475,2.767,476,3.579,477,2.767,478,2.767,479,2.767,480,2.767,481,2.767,482,2.767,483,2.767,484,3.579,485,3.579,486,2.767,487,2.767,488,2.767,489,2.767,490,2.767,491,2.767,492,2.767,493,2.767,494,2.767,495,2.767,496,2.767,497,2.767,498,2.767,499,2.767,500,2.767,501,2.767,502,2.767,503,2.767,504,2.767,505,2.767,506,2.767,507,2.767,508,2.767,509,2.767,510,2.767,511,2.767,512,2.767,513,2.767]],["title/modules.html",[186,2.057]],["body/modules.html",[49,0.063,144,0.055,145,0.063,146,0.055,185,1.618,186,2.347,375,2.347,392,2.889,514,3.713,515,3.713]],["title/overview.html",[516,2.533]],["body/overview.html",[1,1.122,2,1.023,49,0.07,119,2.669,124,1.023,127,0.695,132,0.704,134,0.902,137,1.122,141,0.902,144,0.041,145,0.053,146,0.041,184,2.288,185,2.108,187,1.473,188,2.192,189,1.78,190,2.192,191,2.192,192,2.192,193,2.192,194,2.192,195,2.817,196,2.192,197,1.78,224,1.473,257,1.473,516,2.192,517,2.816]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":108,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["0.1",{"_index":109,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["0.8.26",{"_index":386,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":119,"title":{},"body":{"components/DrawerItemComponent.html":{},"index.html":{},"overview.html":{}}}],["1.9.0",{"_index":384,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":358,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":362,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":355,"title":{},"body":{"coverage.html":{}}}],["100vh",{"_index":180,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["16px",{"_index":99,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["2",{"_index":443,"title":{},"body":{"index.html":{}}}],["2.0.8",{"_index":381,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":379,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":449,"title":{},"body":{"license.html":{}}}],["24px",{"_index":123,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["25",{"_index":361,"title":{},"body":{"coverage.html":{}}}],["296px",{"_index":183,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["3/4",{"_index":360,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":357,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":517,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":356,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":102,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerNavListComponent.html":{}}}],["5/5",{"_index":363,"title":{},"body":{"coverage.html":{}}}],["6.3.3",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":364,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":369,"title":{},"body":{"dependencies.html":{}}}],["7.3.2",{"_index":371,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":359,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":98,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerNavListComponent.html":{}}}],["96",{"_index":116,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerNavListComponent.html":{}}}],["_active_",{"_index":244,"title":{},"body":{"interfaces/DrawerNavItem.html":{}}}],["a100",{"_index":431,"title":{},"body":{"index.html":{}}}],["a200",{"_index":430,"title":{},"body":{"index.html":{}}}],["a400",{"_index":432,"title":{},"body":{"index.html":{}}}],["above",{"_index":483,"title":{},"body":{"license.html":{}}}],["accent",{"_index":428,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":47,"title":{},"body":{"components/DrawerItemComponent.html":{},"injectables/DrawerService.html":{}}}],["action",{"_index":507,"title":{},"body":{"license.html":{}}}],["activation",{"_index":277,"title":{},"body":{"injectables/DrawerService.html":{}}}],["active",{"_index":33,"title":{},"body":{"components/DrawerItemComponent.html":{},"interfaces/DrawerNavItem.html":{}}}],["active(v",{"_index":90,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["activevalue",{"_index":83,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["actual_component",{"_index":143,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["add",{"_index":399,"title":{},"body":{"index.html":{}}}],["added",{"_index":34,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["allows",{"_index":149,"title":{},"body":{"components/DrawerLayoutComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["alternative",{"_index":404,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":474,"title":{},"body":{"license.html":{}}}],["angular",{"_index":240,"title":{},"body":{"interfaces/DrawerNavItem.html":{},"index.html":{}}}],["angular/animations",{"_index":368,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":370,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":207,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":372,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":76,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":373,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":211,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"dependencies.html":{}}}],["angular/material/theming",{"_index":422,"title":{},"body":{"index.html":{}}}],["angular/materialfor",{"_index":403,"title":{},"body":{"index.html":{}}}],["angular/platform",{"_index":374,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":213,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"dependencies.html":{}}}],["app",{"_index":394,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":441,"title":{},"body":{"index.html":{}}}],["application",{"_index":262,"title":{},"body":{"injectables/DrawerService.html":{}}}],["applications",{"_index":156,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["apply",{"_index":239,"title":{},"body":{"interfaces/DrawerNavItem.html":{}}}],["appmodule",{"_index":442,"title":{},"body":{"index.html":{}}}],["arising",{"_index":511,"title":{},"body":{"license.html":{}}}],["associated",{"_index":461,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":322,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["authors",{"_index":501,"title":{},"body":{"license.html":{}}}],["auto",{"_index":120,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["available",{"_index":327,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["background",{"_index":106,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["behaviorsubject",{"_index":289,"title":{},"body":{"injectables/DrawerService.html":{}}}],["behaviorsubject(false",{"_index":294,"title":{},"body":{"injectables/DrawerService.html":{}}}],["benefit",{"_index":417,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":50,"title":{},"body":{"components/DrawerItemComponent.html":{},"interfaces/DrawerNavItem.html":{},"injectables/DrawerService.html":{}}}],["bootstrap",{"_index":189,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":100,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["browse",{"_index":515,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":375,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":439,"title":{},"body":{"index.html":{}}}],["button",{"_index":139,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["button's",{"_index":324,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["button.component",{"_index":220,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["button.component.html",{"_index":318,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["button.component.scss",{"_index":317,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["button.component.ts",{"_index":305,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:24",{"_index":321,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["button.component.ts:29",{"_index":320,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["button/drawer",{"_index":219,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"components/DrawerToggleButtonComponent.html":{},"coverage.html":{}}}],["c",{"_index":448,"title":{},"body":{"license.html":{}}}],["center",{"_index":96,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["changes",{"_index":31,"title":{},"body":{"components/DrawerItemComponent.html":{},"injectables/DrawerService.html":{}}}],["changing",{"_index":323,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["charge",{"_index":456,"title":{},"body":{"license.html":{}}}],["claim",{"_index":504,"title":{},"body":{"license.html":{}}}],["class",{"_index":32,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"index.html":{}}}],["cli",{"_index":400,"title":{},"body":{"index.html":{}}}],["click",{"_index":307,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["clicked",{"_index":242,"title":{},"body":{"interfaces/DrawerNavItem.html":{}}}],["close",{"_index":263,"title":{},"body":{"injectables/DrawerService.html":{}}}],["closes",{"_index":269,"title":{},"body":{"injectables/DrawerService.html":{}}}],["cluster_drawerlayoutmodule",{"_index":192,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"overview.html":{}}}],["cluster_drawerlayoutmodule_declarations",{"_index":193,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"overview.html":{}}}],["cluster_drawerlayoutmodule_exports",{"_index":194,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"overview.html":{}}}],["color",{"_index":114,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerNavListComponent.html":{}}}],["column",{"_index":179,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["commonmodule",{"_index":206,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["component",{"_index":0,"title":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":129,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"index.html":{},"overview.html":{}}}],["components/drawer",{"_index":214,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["conditions",{"_index":482,"title":{},"body":{"license.html":{}}}],["connection",{"_index":512,"title":{},"body":{"license.html":{}}}],["consists",{"_index":20,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["constructor",{"_index":170,"title":{},"body":{"components/DrawerLayoutComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["constructor(drawer",{"_index":171,"title":{},"body":{"components/DrawerLayoutComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["constructor(public",{"_index":347,"title":{},"body":{"directives/DrawerToggleDirective.html":{}}}],["content",{"_index":95,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"index.html":{}}}],["contract",{"_index":508,"title":{},"body":{"license.html":{}}}],["controlling",{"_index":261,"title":{},"body":{"injectables/DrawerService.html":{}}}],["copies",{"_index":476,"title":{},"body":{"license.html":{}}}],["copy",{"_index":459,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":447,"title":{},"body":{"license.html":{}}}],["core",{"_index":377,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["corresponding",{"_index":164,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["coverage",{"_index":351,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":235,"title":{},"body":{"interfaces/DrawerNavItem.html":{}}}],["currently",{"_index":55,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["cursor",{"_index":103,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["custom",{"_index":419,"title":{},"body":{"index.html":{}}}],["damages",{"_index":505,"title":{},"body":{"license.html":{}}}],["deal",{"_index":463,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":513,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":188,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"overview.html":{}}}],["default",{"_index":252,"title":{},"body":{"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["defaults",{"_index":330,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["defined",{"_index":51,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["defines",{"_index":53,"title":{},"body":{"components/DrawerItemComponent.html":{},"interfaces/DrawerNavItem.html":{}}}],["demo",{"_index":444,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":187,"title":{"dependencies.html":{}},"body":{"modules/DrawerLayoutModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":14,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["descriptive",{"_index":23,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["design",{"_index":152,"title":{},"body":{"components/DrawerLayoutComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"index.html":{}}}],["direction",{"_index":178,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["directive",{"_index":127,"title":{"directives/DrawerToggleDirective.html":{}},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":140,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["directives/drawer",{"_index":221,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["disable",{"_index":264,"title":{},"body":{"injectables/DrawerService.html":{}}}],["disabled",{"_index":288,"title":{},"body":{"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["disables",{"_index":271,"title":{},"body":{"injectables/DrawerService.html":{}}}],["display",{"_index":92,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"interfaces/DrawerNavItem.html":{}}}],["displayed",{"_index":61,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["distribute",{"_index":472,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":352,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["drawer",{"_index":18,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"index.html":{}}}],["drawer.isdisabled$.pipe",{"_index":334,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["drawer.isopened",{"_index":177,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["draweritemcomponent",{"_index":1,"title":{"components/DrawerItemComponent.html":{}},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drawerlayoutcomponent",{"_index":132,"title":{"components/DrawerLayoutComponent.html":{}},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["drawerlayoutmodule",{"_index":185,"title":{"modules/DrawerLayoutModule.html":{}},"body":{"modules/DrawerLayoutModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["drawerlayoutmodule.forroot",{"_index":440,"title":{},"body":{"index.html":{}}}],["drawernavitem",{"_index":225,"title":{"interfaces/DrawerNavItem.html":{}},"body":{"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"coverage.html":{}}}],["drawernavlistcomponent",{"_index":134,"title":{"components/DrawerNavListComponent.html":{}},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drawerservice",{"_index":165,"title":{"injectables/DrawerService.html":{}},"body":{"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"coverage.html":{}}}],["drawertogglebuttoncomponent",{"_index":137,"title":{"components/DrawerToggleButtonComponent.html":{}},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drawertoggledirective",{"_index":141,"title":{"directives/DrawerToggleDirective.html":{}},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"coverage.html":{},"overview.html":{}}}],["dynamic",{"_index":376,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":126,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["en",{"_index":287,"title":{},"body":{"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["enable",{"_index":265,"title":{},"body":{"injectables/DrawerService.html":{}}}],["enable(open",{"_index":272,"title":{},"body":{"injectables/DrawerService.html":{}}}],["enabled",{"_index":30,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["enables",{"_index":274,"title":{},"body":{"injectables/DrawerService.html":{}}}],["event",{"_index":340,"title":{},"body":{"directives/DrawerToggleDirective.html":{},"license.html":{}}}],["events",{"_index":339,"title":{},"body":{"directives/DrawerToggleDirective.html":{}}}],["exact",{"_index":233,"title":{},"body":{"interfaces/DrawerNavItem.html":{}}}],["exactly",{"_index":237,"title":{},"body":{"interfaces/DrawerNavItem.html":{}}}],["export",{"_index":81,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"index.html":{}}}],["exports",{"_index":191,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"overview.html":{}}}],["express",{"_index":492,"title":{},"body":{"license.html":{}}}],["false",{"_index":84,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"coverage.html":{}}}],["files",{"_index":462,"title":{},"body":{"license.html":{}}}],["fires",{"_index":284,"title":{},"body":{"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["fitness",{"_index":497,"title":{},"body":{"license.html":{}}}],["flex",{"_index":93,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{}}}],["following",{"_index":481,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":202,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["free",{"_index":455,"title":{},"body":{"license.html":{}}}],["furnished",{"_index":479,"title":{},"body":{"license.html":{}}}],["getisdisabled",{"_index":285,"title":{},"body":{"injectables/DrawerService.html":{}}}],["getisopened",{"_index":282,"title":{},"body":{"injectables/DrawerService.html":{}}}],["getting",{"_index":387,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":247,"title":{},"body":{"components/DrawerNavListComponent.html":{}}}],["granted",{"_index":454,"title":{},"body":{"license.html":{}}}],["guide",{"_index":409,"title":{},"body":{"index.html":{}}}],["h3",{"_index":256,"title":{},"body":{"components/DrawerNavListComponent.html":{}}}],["hamburger",{"_index":316,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["hammerjs",{"_index":380,"title":{},"body":{"dependencies.html":{}}}],["heading",{"_index":248,"title":{},"body":{"components/DrawerNavListComponent.html":{}}}],["height",{"_index":122,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{}}}],["helper",{"_index":309,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["hereby",{"_index":453,"title":{},"body":{"license.html":{}}}],["holders",{"_index":502,"title":{},"body":{"license.html":{}}}],["host",{"_index":91,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["host(:focus",{"_index":110,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["host(:hover",{"_index":105,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["hostbinding",{"_index":74,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["hostbinding('class.active",{"_index":86,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["hostlistener",{"_index":346,"title":{},"body":{"directives/DrawerToggleDirective.html":{}}}],["hostlistener('click",{"_index":348,"title":{},"body":{"directives/DrawerToggleDirective.html":{}}}],["hostlisteners",{"_index":342,"title":{},"body":{"directives/DrawerToggleDirective.html":{}}}],["href",{"_index":234,"title":{},"body":{"interfaces/DrawerNavItem.html":{}}}],["html",{"_index":125,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["https://github.com/latusinski/ngx",{"_index":79,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["icon",{"_index":22,"title":{},"body":{"components/DrawerItemComponent.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["icons",{"_index":328,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["icon}}{{text",{"_index":130,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["identifier",{"_index":353,"title":{},"body":{"coverage.html":{}}}],["implementing",{"_index":393,"title":{},"body":{"index.html":{}}}],["implements",{"_index":310,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["implied",{"_index":493,"title":{},"body":{"license.html":{}}}],["import",{"_index":73,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"index.html":{}}}],["imports",{"_index":223,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"index.html":{}}}],["include",{"_index":424,"title":{},"body":{"index.html":{}}}],["included",{"_index":486,"title":{},"body":{"license.html":{}}}],["including",{"_index":466,"title":{},"body":{"license.html":{}}}],["index",{"_index":45,"title":{"index.html":{}},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["indigo",{"_index":427,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["injectable",{"_index":257,"title":{"injectables/DrawerService.html":{}},"body":{"injectables/DrawerService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":258,"title":{},"body":{"injectables/DrawerService.html":{}}}],["input",{"_index":75,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["inputs",{"_index":46,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["inside",{"_index":243,"title":{},"body":{"interfaces/DrawerNavItem.html":{}}}],["install",{"_index":411,"title":{},"body":{"index.html":{}}}],["installation",{"_index":405,"title":{},"body":{"index.html":{}}}],["installing",{"_index":396,"title":{},"body":{"index.html":{}}}],["interface",{"_index":224,"title":{"interfaces/DrawerNavItem.html":{}},"body":{"interfaces/DrawerNavItem.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":226,"title":{},"body":{"interfaces/DrawerNavItem.html":{}}}],["inverts",{"_index":281,"title":{},"body":{"injectables/DrawerService.html":{}}}],["isdisabled",{"_index":267,"title":{},"body":{"injectables/DrawerService.html":{}}}],["isdisabledsubject",{"_index":295,"title":{},"body":{"injectables/DrawerService.html":{}}}],["isenabled",{"_index":319,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["isopened",{"_index":169,"title":{},"body":{"components/DrawerLayoutComponent.html":{},"injectables/DrawerService.html":{}}}],["isopenedsubject",{"_index":292,"title":{},"body":{"injectables/DrawerService.html":{}}}],["item",{"_index":19,"title":{},"body":{"components/DrawerItemComponent.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{}}}],["item's",{"_index":56,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["item'},{'name",{"_index":131,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["item.component",{"_index":216,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["item.component.html",{"_index":44,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["item.component.scss",{"_index":42,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["item.component.ts",{"_index":13,"title":{},"body":{"components/DrawerItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:22",{"_index":59,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["item.component.ts:26",{"_index":60,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["item.component.ts:34",{"_index":52,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["item.component.ts:42",{"_index":63,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["item/drawer",{"_index":12,"title":{},"body":{"components/DrawerItemComponent.html":{},"modules/DrawerLayoutModule.html":{},"coverage.html":{}}}],["items",{"_index":232,"title":{},"body":{"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{}}}],["js",{"_index":378,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":94,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["kevin",{"_index":450,"title":{},"body":{"license.html":{}}}],["kind",{"_index":491,"title":{},"body":{"license.html":{}}}],["latusinski",{"_index":451,"title":{},"body":{"license.html":{}}}],["layout",{"_index":153,"title":{},"body":{"components/DrawerLayoutComponent.html":{},"index.html":{}}}],["layout#enabling",{"_index":80,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["layout'},{'name",{"_index":133,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["layout.component",{"_index":215,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["layout.component.html",{"_index":167,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["layout.component.scss",{"_index":166,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["layout.component.ts",{"_index":148,"title":{},"body":{"components/DrawerLayoutComponent.html":{},"coverage.html":{}}}],["layout.component.ts:19",{"_index":172,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["layout.module.ts",{"_index":199,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["layout.module.ts:37",{"_index":203,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["layout/drawer",{"_index":147,"title":{},"body":{"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"coverage.html":{}}}],["layout/src/lib/components/drawer",{"_index":11,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"coverage.html":{}}}],["layout/src/lib/directives/drawer",{"_index":336,"title":{},"body":{"directives/DrawerToggleDirective.html":{},"coverage.html":{}}}],["layout/src/lib/drawer",{"_index":198,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["layout/src/lib/models/drawer",{"_index":227,"title":{},"body":{"interfaces/DrawerNavItem.html":{},"coverage.html":{}}}],["layout/src/lib/services/drawer.service.ts",{"_index":259,"title":{},"body":{"injectables/DrawerService.html":{},"coverage.html":{}}}],["layout/src/lib/services/drawer.service.ts:18",{"_index":283,"title":{},"body":{"injectables/DrawerService.html":{}}}],["layout/src/lib/services/drawer.service.ts:25",{"_index":286,"title":{},"body":{"injectables/DrawerService.html":{}}}],["layout/src/lib/services/drawer.service.ts:32",{"_index":278,"title":{},"body":{"injectables/DrawerService.html":{}}}],["layout/src/lib/services/drawer.service.ts:39",{"_index":268,"title":{},"body":{"injectables/DrawerService.html":{}}}],["layout/src/lib/services/drawer.service.ts:46",{"_index":280,"title":{},"body":{"injectables/DrawerService.html":{}}}],["layout/src/lib/services/drawer.service.ts:54",{"_index":273,"title":{},"body":{"injectables/DrawerService.html":{}}}],["layout/src/lib/services/drawer.service.ts:64",{"_index":270,"title":{},"body":{"injectables/DrawerService.html":{}}}],["layout/theming",{"_index":423,"title":{},"body":{"index.html":{}}}],["layoutenabling",{"_index":415,"title":{},"body":{"index.html":{}}}],["layoutusing",{"_index":413,"title":{},"body":{"index.html":{}}}],["legend",{"_index":124,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"overview.html":{}}}],["liability",{"_index":506,"title":{},"body":{"license.html":{}}}],["liable",{"_index":503,"title":{},"body":{"license.html":{}}}],["library",{"_index":390,"title":{},"body":{"index.html":{}}}],["license",{"_index":445,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":435,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":467,"title":{},"body":{"license.html":{}}}],["limited",{"_index":494,"title":{},"body":{"license.html":{}}}],["line",{"_index":121,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["link",{"_index":77,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["list",{"_index":231,"title":{},"body":{"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{}}}],["list'},{'name",{"_index":136,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["list.component",{"_index":218,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["list.component.html",{"_index":250,"title":{},"body":{"components/DrawerNavListComponent.html":{}}}],["list.component.scss",{"_index":249,"title":{},"body":{"components/DrawerNavListComponent.html":{}}}],["list.component.ts",{"_index":245,"title":{},"body":{"components/DrawerNavListComponent.html":{},"coverage.html":{}}}],["list.component.ts:15",{"_index":251,"title":{},"body":{"components/DrawerNavListComponent.html":{}}}],["list.component.ts:16",{"_index":254,"title":{},"body":{"components/DrawerNavListComponent.html":{}}}],["list/drawer",{"_index":217,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"components/DrawerNavListComponent.html":{},"coverage.html":{}}}],["listens",{"_index":338,"title":{},"body":{"directives/DrawerToggleDirective.html":{}}}],["make",{"_index":397,"title":{},"body":{"index.html":{}}}],["management",{"_index":313,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["manipulate",{"_index":162,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["map",{"_index":331,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["map(v",{"_index":335,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["margin",{"_index":117,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerNavListComponent.html":{}}}],["mat",{"_index":113,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"index.html":{}}}],["matbuttonmodule",{"_index":208,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["match",{"_index":238,"title":{},"body":{"interfaces/DrawerNavItem.html":{}}}],["matching",{"_index":145,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["material",{"_index":15,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"index.html":{}}}],["maticonmodule",{"_index":209,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["maticonregistry",{"_index":329,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["matsidenavmodule",{"_index":210,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["menu",{"_index":315,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["merchantability",{"_index":496,"title":{},"body":{"license.html":{}}}],["merge",{"_index":470,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":38,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["methods",{"_index":200,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"injectables/DrawerService.html":{}}}],["min",{"_index":181,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["mit",{"_index":446,"title":{},"body":{"license.html":{}}}],["models/drawer",{"_index":255,"title":{},"body":{"components/DrawerNavListComponent.html":{}}}],["modify",{"_index":469,"title":{},"body":{"license.html":{}}}],["module",{"_index":184,"title":{"modules/DrawerLayoutModule.html":{}},"body":{"modules/DrawerLayoutModule.html":{},"overview.html":{}}}],["modules",{"_index":186,"title":{"modules.html":{}},"body":{"modules/DrawerLayoutModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":204,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["name",{"_index":66,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["nav",{"_index":135,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"coverage.html":{}}}],["nav.ts",{"_index":228,"title":{},"body":{"interfaces/DrawerNavItem.html":{},"coverage.html":{}}}],["navigated",{"_index":241,"title":{},"body":{"interfaces/DrawerNavItem.html":{}}}],["navigation",{"_index":17,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["need",{"_index":418,"title":{},"body":{"index.html":{}}}],["needed",{"_index":229,"title":{},"body":{"interfaces/DrawerNavItem.html":{}}}],["new",{"_index":293,"title":{},"body":{"injectables/DrawerService.html":{},"coverage.html":{}}}],["ng",{"_index":402,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":205,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"index.html":{}}}],["ngx",{"_index":40,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"index.html":{}}}],["ngxdrawertoggle",{"_index":142,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["none",{"_index":112,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["noninfringement",{"_index":500,"title":{},"body":{"license.html":{}}}],["notice",{"_index":484,"title":{},"body":{"license.html":{}}}],["npm",{"_index":410,"title":{},"body":{"index.html":{}}}],["observable",{"_index":173,"title":{},"body":{"components/DrawerLayoutComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["obtaining",{"_index":458,"title":{},"body":{"license.html":{}}}],["onclick",{"_index":349,"title":{},"body":{"directives/DrawerToggleDirective.html":{}}}],["open",{"_index":266,"title":{},"body":{"injectables/DrawerService.html":{}}}],["opened",{"_index":276,"title":{},"body":{"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["opens",{"_index":279,"title":{},"body":{"injectables/DrawerService.html":{}}}],["optional",{"_index":21,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["order",{"_index":27,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"interfaces/DrawerNavItem.html":{}}}],["otherwise",{"_index":510,"title":{},"body":{"license.html":{}}}],["out",{"_index":197,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":111,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["overview",{"_index":516,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":367,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":97,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["palette($mat",{"_index":426,"title":{},"body":{"index.html":{}}}],["param",{"_index":89,"title":{},"body":{"components/DrawerItemComponent.html":{},"injectables/DrawerService.html":{}}}],["parameters",{"_index":65,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["particular",{"_index":498,"title":{},"body":{"license.html":{}}}],["permission",{"_index":452,"title":{},"body":{"license.html":{}}}],["permit",{"_index":477,"title":{},"body":{"license.html":{}}}],["person",{"_index":457,"title":{},"body":{"license.html":{}}}],["persons",{"_index":478,"title":{},"body":{"license.html":{}}}],["pink",{"_index":429,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":104,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["portions",{"_index":488,"title":{},"body":{"license.html":{}}}],["practices",{"_index":312,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["primary",{"_index":425,"title":{},"body":{"index.html":{}}}],["private",{"_index":82,"title":{},"body":{"components/DrawerItemComponent.html":{},"injectables/DrawerService.html":{}}}],["project",{"_index":389,"title":{},"body":{"index.html":{}}}],["projects/drawer",{"_index":10,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"coverage.html":{}}}],["properties",{"_index":168,"title":{},"body":{"components/DrawerLayoutComponent.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["provided",{"_index":489,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":290,"title":{},"body":{"injectables/DrawerService.html":{}}}],["providers",{"_index":190,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"overview.html":{}}}],["provides",{"_index":391,"title":{},"body":{"index.html":{}}}],["public",{"_index":85,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["publish",{"_index":471,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":499,"title":{},"body":{"license.html":{}}}],["quick",{"_index":407,"title":{},"body":{"index.html":{}}}],["radius",{"_index":101,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["red",{"_index":434,"title":{},"body":{"index.html":{}}}],["refer",{"_index":406,"title":{},"body":{"index.html":{}}}],["relies",{"_index":395,"title":{},"body":{"index.html":{}}}],["render",{"_index":230,"title":{},"body":{"interfaces/DrawerNavItem.html":{}}}],["rendering",{"_index":150,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["renders",{"_index":246,"title":{},"body":{"components/DrawerNavListComponent.html":{}}}],["reset",{"_index":196,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"overview.html":{}}}],["restriction",{"_index":465,"title":{},"body":{"license.html":{}}}],["result",{"_index":144,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":146,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":87,"title":{},"body":{"components/DrawerItemComponent.html":{},"modules/DrawerLayoutModule.html":{},"injectables/DrawerService.html":{}}}],["returns",{"_index":71,"title":{},"body":{"components/DrawerItemComponent.html":{},"modules/DrawerLayoutModule.html":{},"injectables/DrawerService.html":{}}}],["rgb(96",{"_index":115,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerNavListComponent.html":{}}}],["rgba(0",{"_index":107,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["right",{"_index":118,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["rights",{"_index":468,"title":{},"body":{"license.html":{}}}],["root",{"_index":291,"title":{},"body":{"injectables/DrawerService.html":{}}}],["route",{"_index":236,"title":{},"body":{"interfaces/DrawerNavItem.html":{}}}],["routerlink",{"_index":26,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["routerlinkactive]=\"active",{"_index":37,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["routermodule",{"_index":212,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["run",{"_index":401,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":174,"title":{},"body":{"components/DrawerLayoutComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":332,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["save",{"_index":412,"title":{},"body":{"index.html":{}}}],["selector",{"_index":39,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["sell",{"_index":475,"title":{},"body":{"license.html":{}}}],["serves",{"_index":308,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["service",{"_index":260,"title":{},"body":{"injectables/DrawerService.html":{}}}],["services/drawer.service",{"_index":175,"title":{},"body":{"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["set",{"_index":70,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["setactive(v",{"_index":62,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["setter",{"_index":64,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["shall",{"_index":485,"title":{},"body":{"license.html":{}}}],["software",{"_index":460,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["space",{"_index":161,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["start",{"_index":408,"title":{},"body":{"index.html":{}}}],["started",{"_index":388,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":163,"title":{},"body":{"components/DrawerLayoutComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{}}}],["statements",{"_index":354,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":201,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["string",{"_index":58,"title":{},"body":{"components/DrawerItemComponent.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{}}}],["style",{"_index":16,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["styleurls",{"_index":41,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["styling",{"_index":57,"title":{},"body":{"components/DrawerItemComponent.html":{},"interfaces/DrawerNavItem.html":{}}}],["subject",{"_index":480,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":473,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":487,"title":{},"body":{"license.html":{}}}],["support",{"_index":392,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supposed",{"_index":154,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["sure",{"_index":398,"title":{},"body":{"index.html":{}}}],["svg",{"_index":514,"title":{},"body":{"modules.html":{}}}],["table",{"_index":366,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":365,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":157,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["templateurl",{"_index":43,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["text",{"_index":24,"title":{},"body":{"components/DrawerItemComponent.html":{},"interfaces/DrawerNavItem.html":{}}}],["theme",{"_index":421,"title":{},"body":{"index.html":{}}}],["theme($primary",{"_index":436,"title":{},"body":{"index.html":{}}}],["theme($theme",{"_index":437,"title":{},"body":{"index.html":{}}}],["theme($theme);usage",{"_index":438,"title":{},"body":{"index.html":{}}}],["theme](https://material.angular.io/guide/theming#defining",{"_index":420,"title":{},"body":{"index.html":{}}}],["theming",{"_index":29,"title":{},"body":{"components/DrawerItemComponent.html":{},"index.html":{}}}],["theming]{@link",{"_index":78,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["this.activevalue",{"_index":88,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["this.close",{"_index":304,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.drawer.toggle",{"_index":350,"title":{},"body":{"directives/DrawerToggleDirective.html":{}}}],["this.isdisabledsubject.asobservable",{"_index":297,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.isdisabledsubject.next(false",{"_index":301,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.isdisabledsubject.next(true",{"_index":303,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.isenabled",{"_index":333,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["this.isopened",{"_index":176,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["this.isopenedsubject.asobservable",{"_index":296,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.isopenedsubject.next(!this.isopenedsubject.value",{"_index":300,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.isopenedsubject.next(false",{"_index":299,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.isopenedsubject.next(true",{"_index":298,"title":{},"body":{"injectables/DrawerService.html":{}}}],["this.open",{"_index":302,"title":{},"body":{"injectables/DrawerService.html":{}}}],["toggle",{"_index":138,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"modules/DrawerLayoutModule.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"coverage.html":{}}}],["toggle.directive",{"_index":222,"title":{},"body":{"modules/DrawerLayoutModule.html":{}}}],["toggle.directive.ts",{"_index":337,"title":{},"body":{"directives/DrawerToggleDirective.html":{},"coverage.html":{}}}],["toggle.directive.ts:12",{"_index":343,"title":{},"body":{"directives/DrawerToggleDirective.html":{}}}],["toggle.directive.ts:13",{"_index":345,"title":{},"body":{"directives/DrawerToggleDirective.html":{}}}],["toggle.directive.ts:17",{"_index":344,"title":{},"body":{"directives/DrawerToggleDirective.html":{}}}],["toggled",{"_index":341,"title":{},"body":{"directives/DrawerToggleDirective.html":{}}}],["toggles",{"_index":306,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["top",{"_index":155,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["tort",{"_index":509,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["true",{"_index":69,"title":{},"body":{"components/DrawerItemComponent.html":{},"injectables/DrawerService.html":{}}}],["tslib",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":48,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"interfaces/DrawerNavItem.html":{},"components/DrawerNavListComponent.html":{},"injectables/DrawerService.html":{},"components/DrawerToggleButtonComponent.html":{},"directives/DrawerToggleDirective.html":{},"coverage.html":{}}}],["typical",{"_index":151,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["up",{"_index":158,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["use",{"_index":68,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":25,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"interfaces/DrawerNavItem.html":{},"injectables/DrawerService.html":{}}}],["useful",{"_index":35,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["uses",{"_index":314,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["using",{"_index":36,"title":{},"body":{"components/DrawerItemComponent.html":{},"index.html":{}}}],["usual",{"_index":311,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["v",{"_index":67,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["valid",{"_index":325,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["value",{"_index":253,"title":{},"body":{"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["values",{"_index":326,"title":{},"body":{"components/DrawerToggleButtonComponent.html":{}}}],["var",{"_index":128,"title":{},"body":{"components/DrawerItemComponent.html":{},"components/DrawerLayoutComponent.html":{},"components/DrawerNavListComponent.html":{},"components/DrawerToggleButtonComponent.html":{}}}],["void",{"_index":72,"title":{},"body":{"components/DrawerItemComponent.html":{},"injectables/DrawerService.html":{}}}],["want",{"_index":416,"title":{},"body":{"index.html":{}}}],["warn",{"_index":433,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":495,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":490,"title":{},"body":{"license.html":{}}}],["whether",{"_index":54,"title":{},"body":{"components/DrawerItemComponent.html":{},"interfaces/DrawerNavItem.html":{},"license.html":{}}}],["whole",{"_index":159,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["width",{"_index":182,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["window",{"_index":160,"title":{},"body":{"components/DrawerLayoutComponent.html":{}}}],["without",{"_index":464,"title":{},"body":{"license.html":{}}}],["work",{"_index":28,"title":{},"body":{"components/DrawerItemComponent.html":{}}}],["yarn",{"_index":414,"title":{},"body":{"index.html":{}}}],["yes",{"_index":275,"title":{},"body":{"injectables/DrawerService.html":{}}}],["zone.js",{"_index":385,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":195,"title":{},"body":{"modules/DrawerLayoutModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/DrawerItemComponent.html":{"url":"components/DrawerItemComponent.html","title":"component - DrawerItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DrawerItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/drawer-layout/src/lib/components/drawer-item/drawer-item.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a Material-style navigation drawer item.\nIt consists of an optional icon and a descriptive text.\nIt can be used with RouterLink in order to work as a navigation item.\nWith Material theming\nenabled, this component changes its style, when the class \"active\" is added. This might be useful, when\nusing [routerLink] with [routerLinkActive]=\"active\".\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-drawer-item\n            \n\n            \n                styleUrls\n                ./drawer-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drawer-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                icon\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    active\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/components/drawer-item/drawer-item.component.ts:34\n                            \n                        \n                \n                    \n                        Defines whether this drawer item is currently active.\nThis changes the item's styling, if Material theming is enabled.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/components/drawer-item/drawer-item.component.ts:22\n                            \n                        \n                \n                    \n                        Defines the icon, which is used for the drawer item. Optional.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/components/drawer-item/drawer-item.component.ts:26\n                            \n                        \n                \n                    \n                        The text, which is displayed in the drawer item.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n\n\n                \n                    \n                        setactive(v: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/drawer-layout/src/lib/components/drawer-item/drawer-item.component.ts:42\n                                \n                            \n                    \n                        \n                                Setter for the \"active\" class of this drawer item.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Use true, if the class \"active\" should be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, HostBinding, Input} from '@angular/core';\n\n/**\n * This component is a Material-style navigation drawer item.\n * It consists of an optional icon and a descriptive text.\n * It can be used with {@link RouterLink} in order to work as a navigation item.\n * With [Material theming]{@link https://github.com/latusinski/ngx-drawer-layout#enabling-material-theming}\n * enabled, this component changes its style, when the class \"active\" is added. This might be useful, when\n * using [routerLink] with [routerLinkActive]=\"active\".\n */\n@Component({\n  selector: 'ngx-drawer-item',\n  templateUrl: './drawer-item.component.html',\n  styleUrls: ['./drawer-item.component.scss'],\n})\nexport class DrawerItemComponent {\n  private activeValue = false;\n\n  /**\n   * Defines the icon, which is used for the drawer item. Optional.\n   */\n  @Input() public icon: string;\n  /**\n   * The text, which is displayed in the drawer item.\n   */\n  @Input() public text: string;\n\n  /**\n   * Defines whether this drawer item is currently active.\n   * This changes the item's styling, if Material theming is enabled.\n   */\n  @HostBinding('class.active')\n  @Input()\n  public get active(): boolean {\n    return this.activeValue !== false;\n  }\n\n  /**\n   * Setter for the \"active\" class of this drawer item.\n   * @param v Use true, if the class \"active\" should be set.\n   */\n  public set active(v: boolean) {\n    this.activeValue = v;\n  }\n}\n\n    \n\n    \n        {{icon}}\n\n{{text}}\n\n\n    \n\n    \n                \n                    ./drawer-item.component.scss\n                \n                :host {\n  display: flex;\n  justify-content: center;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n:host(:hover) {\n  background: rgba(0, 0, 0, 0.1);\n}\n\n:host(:focus) {\n  outline: none;\n}\n\nmat-icon {\n  color: rgb(96, 96, 96);\n  margin-right: 16px;\n}\n\n.text {\n  flex: 1 1 auto;\n  line-height: 24px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{icon}}{{text}}'\n    var COMPONENTS = [{'name': 'DrawerItemComponent', 'selector': 'ngx-drawer-item'},{'name': 'DrawerLayoutComponent', 'selector': 'ngx-drawer-layout'},{'name': 'DrawerNavListComponent', 'selector': 'ngx-drawer-nav-list'},{'name': 'DrawerToggleButtonComponent', 'selector': 'ngx-drawer-toggle-button'}];\n    var DIRECTIVES = [{'name': 'DrawerToggleDirective', 'selector': '[ngxDrawerToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'DrawerItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawerLayoutComponent.html":{"url":"components/DrawerLayoutComponent.html","title":"component - DrawerLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DrawerLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/drawer-layout/src/lib/components/drawer-layout/drawer-layout.component.ts\n\n\n    \n        Description\n    \n    \n        Component, which allows for rendering a typical Material Design drawer layout.\nIt is supposed to be used as the top most component of your applications DOM tree, because\nit takes up the whole window space.\nIn order to manipulate the state of this layout and the corresponding drawer use\nDrawerService.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-drawer-layout\n            \n\n            \n                styleUrls\n                ./drawer-layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drawer-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpened$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerService)\n                    \n                \n                        \n                            \n                                Defined in projects/drawer-layout/src/lib/components/drawer-layout/drawer-layout.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                    DrawerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpened$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/components/drawer-layout/drawer-layout.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {DrawerService} from '../../services/drawer.service';\n\n/**\n * Component, which allows for rendering a typical Material Design drawer layout.\n * It is supposed to be used as the top most component of your applications DOM tree, because\n * it takes up the whole window space.\n * In order to manipulate the state of this layout and the corresponding drawer use\n * {@link DrawerService}.\n */\n@Component({\n  selector: 'ngx-drawer-layout',\n  templateUrl: './drawer-layout.component.html',\n  styleUrls: ['./drawer-layout.component.scss']\n})\nexport class DrawerLayoutComponent {\n  isOpened$: Observable;\n\n  constructor(drawer: DrawerService) {\n    this.isOpened$ = drawer.isOpened$;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./drawer-layout.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n}\n\nmat-drawer {\n  min-width: 296px;\n}\n\nmat-drawer-content {\n  height: 100vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'DrawerItemComponent', 'selector': 'ngx-drawer-item'},{'name': 'DrawerLayoutComponent', 'selector': 'ngx-drawer-layout'},{'name': 'DrawerNavListComponent', 'selector': 'ngx-drawer-nav-list'},{'name': 'DrawerToggleButtonComponent', 'selector': 'ngx-drawer-toggle-button'}];\n    var DIRECTIVES = [{'name': 'DrawerToggleDirective', 'selector': '[ngxDrawerToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'DrawerLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerLayoutModule.html":{"url":"modules/DrawerLayoutModule.html","title":"module - DrawerLayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerLayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DrawerLayoutModule\n\n\n\ncluster_DrawerLayoutModule_declarations\n\n\n\ncluster_DrawerLayoutModule_exports\n\n\n\n\nDrawerItemComponent\n\nDrawerItemComponent\n\n\n\nDrawerLayoutModule\n\nDrawerLayoutModule\n\nDrawerLayoutModule -->\n\nDrawerItemComponent->DrawerLayoutModule\n\n\n\n\n\nDrawerLayoutComponent\n\nDrawerLayoutComponent\n\nDrawerLayoutModule -->\n\nDrawerLayoutComponent->DrawerLayoutModule\n\n\n\n\n\nDrawerNavListComponent\n\nDrawerNavListComponent\n\nDrawerLayoutModule -->\n\nDrawerNavListComponent->DrawerLayoutModule\n\n\n\n\n\nDrawerToggleButtonComponent\n\nDrawerToggleButtonComponent\n\nDrawerLayoutModule -->\n\nDrawerToggleButtonComponent->DrawerLayoutModule\n\n\n\n\n\nDrawerToggleDirective\n\nDrawerToggleDirective\n\nDrawerLayoutModule -->\n\nDrawerToggleDirective->DrawerLayoutModule\n\n\n\n\n\nDrawerItemComponent \n\nDrawerItemComponent \n\nDrawerItemComponent  -->\n\nDrawerLayoutModule->DrawerItemComponent \n\n\n\n\n\nDrawerLayoutComponent \n\nDrawerLayoutComponent \n\nDrawerLayoutComponent  -->\n\nDrawerLayoutModule->DrawerLayoutComponent \n\n\n\n\n\nDrawerNavListComponent \n\nDrawerNavListComponent \n\nDrawerNavListComponent  -->\n\nDrawerLayoutModule->DrawerNavListComponent \n\n\n\n\n\nDrawerToggleButtonComponent \n\nDrawerToggleButtonComponent \n\nDrawerToggleButtonComponent  -->\n\nDrawerLayoutModule->DrawerToggleButtonComponent \n\n\n\n\n\nDrawerToggleDirective \n\nDrawerToggleDirective \n\nDrawerToggleDirective  -->\n\nDrawerLayoutModule->DrawerToggleDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/drawer-layout/src/lib/drawer-layout.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DrawerItemComponent\n                        \n                        \n                            DrawerLayoutComponent\n                        \n                        \n                            DrawerNavListComponent\n                        \n                        \n                            DrawerToggleButtonComponent\n                        \n                        \n                            DrawerToggleDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DrawerItemComponent\n                        \n                        \n                            DrawerLayoutComponent\n                        \n                        \n                            DrawerNavListComponent\n                        \n                        \n                            DrawerToggleButtonComponent\n                        \n                        \n                            DrawerToggleDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/drawer-layout.module.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatButtonModule, MatIconModule, MatSidenavModule} from '@angular/material';\nimport {RouterModule} from '@angular/router';\n\nimport {DrawerLayoutComponent} from './components/drawer-layout/drawer-layout.component';\nimport {DrawerItemComponent} from './components/drawer-item/drawer-item.component';\nimport {DrawerNavListComponent} from './components/drawer-nav-list/drawer-nav-list.component';\nimport {DrawerToggleButtonComponent} from './components/drawer-toggle-button/drawer-toggle-button.component';\nimport {DrawerToggleDirective} from './directives/drawer-toggle.directive';\nimport {DrawerService} from './services/drawer.service';\n\n@NgModule({\n  declarations: [\n    DrawerLayoutComponent,\n    DrawerItemComponent,\n    DrawerNavListComponent,\n    DrawerToggleButtonComponent,\n    DrawerToggleDirective,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSidenavModule,\n  ],\n  exports: [\n    DrawerLayoutComponent,\n    DrawerItemComponent,\n    DrawerNavListComponent,\n    DrawerToggleButtonComponent,\n    DrawerToggleDirective,\n  ]\n})\nexport class DrawerLayoutModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DrawerLayoutModule,\n      providers: [\n        DrawerService\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerNavItem.html":{"url":"interfaces/DrawerNavItem.html","title":"interface - DrawerNavItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DrawerNavItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/drawer-layout/src/lib/models/drawer-nav.ts\n        \n\n            \n                Description\n            \n            \n                This interface defines the properties, which are needed by DrawerNavListComponent to render\ndrawer list items.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        exact\n                                \n                                \n                                        href\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exact\n                                    \n                                \n                                \n                                    \n                                        exact:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether the current route should exactly match href in order to apply active styling.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        href\n                                    \n                                \n                                \n                                    \n                                        href:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to the Angular route, which is navigated to, when the drawer item is clicked.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The icon to be used by the drawer item. Optional.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The text to display inside the drawer item.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DrawerNavItem {\n  /**\n   * The icon to be used by the drawer item. Optional.\n   */\n  icon?: string;\n\n  /**\n   * The text to display inside the drawer item.\n   */\n  text: string;\n\n  /**\n   * Link to the Angular route, which is navigated to, when the drawer item is clicked.\n   */\n  href: string;\n\n  /**\n   * Whether the current route should exactly match {@link href} in order to apply _active_ styling.\n   */\n  exact?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawerNavListComponent.html":{"url":"components/DrawerNavListComponent.html","title":"component - DrawerNavListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DrawerNavListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/drawer-layout/src/lib/components/drawer-nav-list/drawer-nav-list.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders all drawer items given by items.\nIt may have an optional heading given by heading.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-drawer-nav-list\n            \n\n            \n                styleUrls\n                ./drawer-nav-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drawer-nav-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                heading\n                            \n                            \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        heading\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/components/drawer-nav-list/drawer-nav-list.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     DrawerNavItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/components/drawer-nav-list/drawer-nav-list.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\nimport {DrawerNavItem} from '../../models/drawer-nav';\n\n/**\n * This component renders all drawer items given by {@link items}.\n * It may have an optional heading given by {@link heading}.\n */\n@Component({\n  selector: 'ngx-drawer-nav-list',\n  templateUrl: './drawer-nav-list.component.html',\n  styleUrls: ['./drawer-nav-list.component.scss']\n})\nexport class DrawerNavListComponent {\n  @Input() public heading: string;\n  @Input() public items: DrawerNavItem[] = [];\n}\n\n    \n\n    \n        {{heading}}\n\n\n\n    \n\n    \n                \n                    ./drawer-nav-list.component.scss\n                \n                ngx-drawer-item {\n  margin: 4px 8px;\n}\n\nh3 {\n  margin: 8px;\n  color: rgb(96, 96, 96);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{heading}}'\n    var COMPONENTS = [{'name': 'DrawerItemComponent', 'selector': 'ngx-drawer-item'},{'name': 'DrawerLayoutComponent', 'selector': 'ngx-drawer-layout'},{'name': 'DrawerNavListComponent', 'selector': 'ngx-drawer-nav-list'},{'name': 'DrawerToggleButtonComponent', 'selector': 'ngx-drawer-toggle-button'}];\n    var DIRECTIVES = [{'name': 'DrawerToggleDirective', 'selector': '[ngxDrawerToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'DrawerNavListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DrawerService.html":{"url":"injectables/DrawerService.html","title":"injectable - DrawerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DrawerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/drawer-layout/src/lib/services/drawer.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for controlling the state of the DrawerLayoutComponent used by\nthis application.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                disable\n                            \n                            \n                                    Public\n                                enable\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isOpened$\n                                \n                                \n                                    isDisabled$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            close\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        close()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/services/drawer.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Closes the drawer.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/services/drawer.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            Disables the drawer and closes it.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        enable(open?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/services/drawer.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Enables the drawer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        open\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                If true, the drawer is opened after activation.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/services/drawer.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Opens the drawer.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/services/drawer.service.ts:46\n                            \n                        \n\n\n                \n                    \n                            Inverts the opened state of the drawer.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isOpened$\n                    \n                \n\n                \n                    \n                        getisOpened$()\n                    \n                \n                            \n                                \n                                    Defined in projects/drawer-layout/src/lib/services/drawer.service.ts:18\n                                \n                            \n                    \n                        \n                                Returns an observable, which fires when the opened state of the drawer changes.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled$\n                    \n                \n\n                \n                    \n                        getisDisabled$()\n                    \n                \n                            \n                                \n                                    Defined in projects/drawer-layout/src/lib/services/drawer.service.ts:25\n                                \n                            \n                    \n                        \n                                Returns an observable, which fires, when the drawer is en-/disabled.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n/**\n * Service for controlling the state of the {@link DrawerLayoutComponent} used by\n * this application.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DrawerService {\n  private isOpenedSubject = new BehaviorSubject(false);\n  private isDisabledSubject = new BehaviorSubject(false);\n\n  /**\n   * Returns an observable, which fires when the opened state of the drawer changes.\n   */\n  public get isOpened$(): Observable {\n    return this.isOpenedSubject.asObservable();\n  }\n\n  /**\n   * Returns an observable, which fires, when the drawer is en-/disabled.\n   */\n  public get isDisabled$(): Observable {\n    return this.isDisabledSubject.asObservable();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  public open(): void {\n    this.isOpenedSubject.next(true);\n  }\n\n  /**\n   * Closes the drawer.\n   */\n  public close(): void {\n    this.isOpenedSubject.next(false);\n  }\n\n  /**\n   * Inverts the opened state of the drawer.\n   */\n  public toggle(): void {\n    this.isOpenedSubject.next(!this.isOpenedSubject.value);\n  }\n\n  /**\n   * Enables the drawer.\n   * @param open If true, the drawer is opened after activation.\n   */\n  public enable(open?: boolean): void {\n    this.isDisabledSubject.next(false);\n    if (open) {\n      this.open();\n    }\n  }\n\n  /**\n   * Disables the drawer and closes it.\n   */\n  public disable(): void {\n    this.isDisabledSubject.next(true);\n    this.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawerToggleButtonComponent.html":{"url":"components/DrawerToggleButtonComponent.html","title":"component - DrawerToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DrawerToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/drawer-layout/src/lib/components/drawer-toggle-button/drawer-toggle-button.component.ts\n\n\n    \n        Description\n    \n    \n        Material icon button component, which can toggles the drawer opened state on click.\nThis serves as a helper component, since it implements usual Material Design practices for\ndrawer management.\nUses the menu (\"hamburger\") icon as default icon.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ngx-drawer-toggle-button\n            \n\n            \n                styleUrls\n                ./drawer-toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./drawer-toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isEnabled$\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerService)\n                    \n                \n                        \n                            \n                                Defined in projects/drawer-layout/src/lib/components/drawer-toggle-button/drawer-toggle-button.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                    DrawerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Default value : 'menu'\n                    \n                \n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/components/drawer-toggle-button/drawer-toggle-button.component.ts:24\n                            \n                        \n                \n                    \n                        Attribute, which allows for changing this button's icon. Valid values are all\navailable icons from the MatIconRegistry.\nDefaults to \"menu\".\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEnabled$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/components/drawer-toggle-button/drawer-toggle-button.component.ts:29\n                            \n                        \n\n                \n                    \n                        An observable, which fires, when the drawer is en-/disabled\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {DrawerService} from '../../services/drawer.service';\n\n/**\n * Material icon button component, which can toggles the drawer opened state on click.\n * This serves as a helper component, since it implements usual Material Design practices for\n * drawer management.\n * Uses the menu (\"hamburger\") icon as default icon.\n */\n@Component({\n  selector: 'ngx-drawer-toggle-button',\n  templateUrl: './drawer-toggle-button.component.html',\n  styleUrls: ['./drawer-toggle-button.component.scss']\n})\nexport class DrawerToggleButtonComponent {\n  /**\n   * Attribute, which allows for changing this button's icon. Valid values are all\n   * available icons from the {@link MatIconRegistry}.\n   * Defaults to \"menu\".\n   */\n  @Input() public icon = 'menu';\n\n  /**\n   * An observable, which fires, when the drawer is en-/disabled\n   */\n  isEnabled$: Observable;\n\n  constructor(drawer: DrawerService) {\n    this.isEnabled$ = drawer.isDisabled$.pipe(\n      map(v => !v),\n    );\n  }\n}\n\n    \n\n    \n        \n  menu\n\n\n    \n\n    \n                \n                    ./drawer-toggle-button.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  menu'\n    var COMPONENTS = [{'name': 'DrawerItemComponent', 'selector': 'ngx-drawer-item'},{'name': 'DrawerLayoutComponent', 'selector': 'ngx-drawer-layout'},{'name': 'DrawerNavListComponent', 'selector': 'ngx-drawer-nav-list'},{'name': 'DrawerToggleButtonComponent', 'selector': 'ngx-drawer-toggle-button'}];\n    var DIRECTIVES = [{'name': 'DrawerToggleDirective', 'selector': '[ngxDrawerToggle]'}];\n    var ACTUAL_COMPONENT = {'name': 'DrawerToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DrawerToggleDirective.html":{"url":"directives/DrawerToggleDirective.html","title":"directive - DrawerToggleDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DrawerToggleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/drawer-layout/src/lib/directives/drawer-toggle.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive, which listens for click events on the host element. If a click event fires,\nthe opened state of the drawer is toggled.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxDrawerToggle]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                drawer\n                            \n                        \n                    \n                \n\n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerService)\n                    \n                \n                        \n                            \n                                Defined in projects/drawer-layout/src/lib/directives/drawer-toggle.directive.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                    DrawerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            click\n                            \n                            \n                        \n                    \n                \n                \n                    \nclick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/directives/drawer-toggle.directive.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            drawer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DrawerService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/drawer-layout/src/lib/directives/drawer-toggle.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, HostListener} from '@angular/core';\n\nimport {DrawerService} from '../services/drawer.service';\n\n/**\n * Directive, which listens for click events on the host element. If a click event fires,\n * the opened state of the drawer is toggled.\n */\n@Directive({\n  selector: '[ngxDrawerToggle]'\n})\nexport class DrawerToggleDirective {\n  constructor(public drawer: DrawerService) {\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.drawer.toggle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/drawer-layout/src/lib/components/drawer-item/drawer-item.component.ts\n            \n            component\n            DrawerItemComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/drawer-layout/src/lib/components/drawer-layout/drawer-layout.component.ts\n            \n            component\n            DrawerLayoutComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/drawer-layout/src/lib/components/drawer-nav-list/drawer-nav-list.component.ts\n            \n            component\n            DrawerNavListComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/drawer-layout/src/lib/components/drawer-toggle-button/drawer-toggle-button.component.ts\n            \n            component\n            DrawerToggleButtonComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/drawer-layout/src/lib/directives/drawer-toggle.directive.ts\n            \n            directive\n            DrawerToggleDirective\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/drawer-layout/src/lib/models/drawer-nav.ts\n            \n            interface\n            DrawerNavItem\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/drawer-layout/src/lib/services/drawer.service.ts\n            \n            injectable\n            DrawerService\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/cdk : ~7.3.2\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/material : ^7.3.2\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\nNGX Drawer Layout\nThis project is a library for Angular. It provides components, which\n support implementing an app layout using a\n Material Design drawer.\n It relies on the Angular Material Library.\nInstalling\nMake sure to add Angular Material to your project. When using Angular CLI, you can run:\nng add @angular/materialFor alternative installation refer to the quick start guide.  \nUsing npm, you can install the library with:  \nnpm install --save ngx-drawer-layoutUsing yarn, you can install the library with:  \nyarn add ngx-drawer-layoutEnabling Material theming\nIf you want to benefit from Material theming, you need to use Angular Material\n with [a custom theme](https://material.angular.io/guide/theming#defining-a-custom-theme.\n Then, you can add theming to the drawer layout like this:\n@import '~@angular/material/theming';\n@import '~ngx-drawer-layout/theming';\n\n@include mat-core();\n\n$primary: mat-palette($mat-indigo);\n$accent: mat-palette($mat-pink, A200, A100, A400);\n$warn: mat-palette($mat-red);\n$theme: mat-light-theme($primary, $accent, $warn);\n\n@include angular-material-theme($theme);\n@include ngx-drawer-layout-theme($theme);Usage\n1. Import the DrawerLayoutModule\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {DrawerLayoutModule} from 'ngx-drawer-layout';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        DrawerLayoutModule.forRoot()\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }2. Use the DrawerLayoutComponent\n\n  \n    \n    NGX Drawer Layout Demo\n  \n\n  \n    Drawer Content\n  \n\n  \n    App Content\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Kevin Latusinski\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DrawerLayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DrawerLayoutModule\n\n\n\ncluster_DrawerLayoutModule_declarations\n\n\n\ncluster_DrawerLayoutModule_exports\n\n\n\n\nDrawerItemComponent\n\nDrawerItemComponent\n\n\n\nDrawerLayoutModule\n\nDrawerLayoutModule\n\nDrawerLayoutModule -->\n\nDrawerItemComponent->DrawerLayoutModule\n\n\n\n\n\nDrawerLayoutComponent\n\nDrawerLayoutComponent\n\nDrawerLayoutModule -->\n\nDrawerLayoutComponent->DrawerLayoutModule\n\n\n\n\n\nDrawerNavListComponent\n\nDrawerNavListComponent\n\nDrawerLayoutModule -->\n\nDrawerNavListComponent->DrawerLayoutModule\n\n\n\n\n\nDrawerToggleButtonComponent\n\nDrawerToggleButtonComponent\n\nDrawerLayoutModule -->\n\nDrawerToggleButtonComponent->DrawerLayoutModule\n\n\n\n\n\nDrawerToggleDirective\n\nDrawerToggleDirective\n\nDrawerLayoutModule -->\n\nDrawerToggleDirective->DrawerLayoutModule\n\n\n\n\n\nDrawerItemComponent \n\nDrawerItemComponent \n\nDrawerItemComponent  -->\n\nDrawerLayoutModule->DrawerItemComponent \n\n\n\n\n\nDrawerLayoutComponent \n\nDrawerLayoutComponent \n\nDrawerLayoutComponent  -->\n\nDrawerLayoutModule->DrawerLayoutComponent \n\n\n\n\n\nDrawerNavListComponent \n\nDrawerNavListComponent \n\nDrawerNavListComponent  -->\n\nDrawerLayoutModule->DrawerNavListComponent \n\n\n\n\n\nDrawerToggleButtonComponent \n\nDrawerToggleButtonComponent \n\nDrawerToggleButtonComponent  -->\n\nDrawerLayoutModule->DrawerToggleButtonComponent \n\n\n\n\n\nDrawerToggleDirective \n\nDrawerToggleDirective \n\nDrawerToggleDirective  -->\n\nDrawerLayoutModule->DrawerToggleDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
